"""Modify nullable constraints to allow non timeseries parameters

Revision ID: 78acbcac4f84
Revises: a7931fc5c3ca
Create Date: 2024-07-08 09:55:16.631821

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "78acbcac4f84"
down_revision: Union[str, None] = "a7931fc5c3ca"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "layer", "water_model", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "layer", "climate_model", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "layer", "scenario", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column("layer", "year", existing_type=sa.INTEGER(), nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "layer", "year", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "layer", "scenario", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "layer", "climate_model", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "layer", "water_model", existing_type=sa.VARCHAR(), nullable=False
    )
    # ### end Alembic commands ###
