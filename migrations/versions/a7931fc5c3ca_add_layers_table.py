"""Add Layers table

Revision ID: a7931fc5c3ca
Revises:
Create Date: 2024-07-04 15:15:51.607212

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "a7931fc5c3ca"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "layer",
        sa.Column(
            "layer_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("crop", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "water_model", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "climate_model", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "scenario", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "variable", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column(
            "last_updated",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("iterator", sa.Integer(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.PrimaryKeyConstraint("iterator"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(
        op.f("ix_layer_climate_model"),
        "layer",
        ["climate_model"],
        unique=False,
    )
    op.create_index(op.f("ix_layer_crop"), "layer", ["crop"], unique=False)
    op.create_index(op.f("ix_layer_id"), "layer", ["id"], unique=False)
    op.create_index(
        op.f("ix_layer_iterator"), "layer", ["iterator"], unique=False
    )
    op.create_index(
        op.f("ix_layer_layer_name"), "layer", ["layer_name"], unique=False
    )
    op.create_index(
        op.f("ix_layer_scenario"), "layer", ["scenario"], unique=False
    )
    op.create_index(
        op.f("ix_layer_variable"), "layer", ["variable"], unique=False
    )
    op.create_index(
        op.f("ix_layer_water_model"), "layer", ["water_model"], unique=False
    )
    op.create_index(op.f("ix_layer_year"), "layer", ["year"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_layer_year"), table_name="layer")
    op.drop_index(op.f("ix_layer_water_model"), table_name="layer")
    op.drop_index(op.f("ix_layer_variable"), table_name="layer")
    op.drop_index(op.f("ix_layer_scenario"), table_name="layer")
    op.drop_index(op.f("ix_layer_layer_name"), table_name="layer")
    op.drop_index(op.f("ix_layer_iterator"), table_name="layer")
    op.drop_index(op.f("ix_layer_id"), table_name="layer")
    op.drop_index(op.f("ix_layer_crop"), table_name="layer")
    op.drop_index(op.f("ix_layer_climate_model"), table_name="layer")
    op.drop_table("layer")
    # ### end Alembic commands ###
